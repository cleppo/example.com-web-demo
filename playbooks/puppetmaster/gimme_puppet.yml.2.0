---
  - name: Provision a Puppet Master on EC2
    hosts: localhost
    connection: local
    gather_facts: False
    tags: provisioning
    # Necessary Variables for creating/provisioning the EC2 Instance
    vars:
      inventory_dir: /etc/ansible
      instance_type: t2.medium
      #security_groups: "10-net-puppetmaster 10-net-host2host_ssh"
      security_group1: 10-net-puppetmaster
      security_group2: 10-net-host2host_ssh
      image: ami-775e4f16
      region: us-west-2 
      #zone: us-west-2a 
      keypair: ec2_admin-key 
      vpc_subnet_id: subnet-69be3f1f
      assign_public_ip: yes
      private_ip: 10.0.1.5
      count: 1

    # Task that will be used to Launch/Create an EC2 Instance
    tasks:

      - name: Launch the new EC2 Instance
        local_action: ec2
                      groups={{ security_group1 }},{{ security_group2 }}
                      instance_type={{ instance_type}}
                      image={{ image }}
                      wait=true
                      region={{ region }}
                      keypair={{ keypair }}
                      vpc_subnet_id={{ vpc_subnet_id }}
                      assign_public_ip={{ assign_public_ip }}
                      private_ip={{ private_ip  }}
                      count={{count}}
        register: ec2

      - name: Add the puppetmaster group if it doesn't exist
        local_action: lineinfile
                      dest="/etc/ansible/hosts"
                      state=present
                      line="[puppetmaster]"

      - name: Add the newly created EC2 instance(s) to the puppetmaster host group 
        local_action: lineinfile
                      dest="/etc/ansible/hosts"
                      regexp={{ item.private_ip }}
                      insertafter="[puppetmaster]" line={{ item.private_ip }}
        with_items: "{{ ec2.instances }}"

#      - name: Allocating elastic IP to puppet master
#        local_action: ec2_eip
#                      in_vpc=yes
#                      device_id="{{ item.id }}"
#                      reuse_existing_ip_allowed=yes
#                      state=present
#                      region=us-west-2
#        with_items: "{{ ec2.instances }}"
#        register: eip

      - name: Wait for SSH to come up
        local_action: wait_for
                      host={{ item.private_ip }}
                      port=22
                      state=started
        with_items: "{{ ec2.instances }}"

      - name: Add tag to Instance(s)
        local_action: ec2_tag resource={{ item.id }} region={{ region }} state=present
        with_items: "{{ ec2.instances }}"
        args:
          tags:
            Name: puppetmaster


      - meta: refresh_inventory

      - name: accept new ssh fingerprints
        shell: ssh-keyscan puppet, "{{ item.private_ip }}" >> ~/.ssh/known_hosts
        with_items: "{{ ec2.instances }}"

#- name: Add known hosts to known_hosts file
  #lineinfile: dest=/home/${ansible_ssh_user}/.ssh/known_hosts regexp=^${item.host} line="${item.line}"
  #with_items:
   #- { "host": "github.com", "line": "github.com,207.97.227.239 ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==" }

  - name:  Install EPEL repo and puppet-server package
    hosts: puppetmaster
    become: true
    vars:
      epel_repo_url: http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-7.noarch.rpm
      puppet_repo_url: https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm
    user: ec2-user
    gather_facts: False

    tasks:

    - name: Install EPEL repo.
      yum:
        name: "{{ epel_repo_url }}"
        state: present
      register: result
      until: '"failed" not in result'
      retries: 5
      delay: 10

    - name: Install Puppetlabs repo.
      yum:
        name: "{{ puppet_repo_url }}"
        state: present
      register: result
      until: '"failed" not in result'
      retries: 5
      delay: 10

    - name: Install puppetserver
      yum: 
        name: "puppetserver-2.0.0-1.el7"
        state: present
      register: result
      until: '"failed" not in result'
      retries: 5
      delay: 10

    - name: Install git
      yum: 
        name: "git"
        state: present
      register: result
      until: '"failed" not in result'
      retries: 5
      delay: 10

    - name: create bootstrap dirs
      file: path=/root/bootstrap/{{item}} state=directory
      with_items:
          - repos
          - modules

