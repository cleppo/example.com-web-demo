---
- name: provisioning host(s)
  hosts: localhost
  vars:
    ec2_host_class: webserver
    aws_resource_tags: {
     'Name': '{{ ec2_host_class }}',
     'Env': 'PROD',
     'Project': 'interview_example_site'
    }
    region: us-west-2
    ec2_count: 2  #  TODO:  figure out how to limit the number of hosts that exist.  This count just causes the plays to add new hosts and iterate over them.
    ec2_groups: ['10-net-puppets','10-net-host2host_ssh','webserver-sg']
    ec2_vpc_subnet_id: subnet-69be3f1f
    ec2_vpc_id: vpc-a5770ec1
    ec2_key_name: ec2_admin-key
    ec2_assign_public_ip: yes
    ec2_instance_type: t2.micro
    ec2_base_image: ami-775e4f16
#    state: absent
#    ec2_volumes:
#      - device_name: /dev/sda1
#        volume_type: gp2
#        volume_size: 200
#        delete_on_termination: true
  roles:
    - { role: ec2-provisioning }

##########################

- name:  adding common packages and repos to all nodes
  hosts: "security_group_10_net_puppets"    
  vars:
    hostname: web-*
    epel_repo_url: http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-8.noarch.rpm
    puppet_repo_url: https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm

  become: true
  user: ec2-user

  roles:
    - { role: common }

##########################

- name: Installing Apache
  hosts: "tag_Name_web*"
  become: true
  roles:
    - { role: geerlingguy.apache }

##########################

- name: Configuring example.com vhost
  hosts: "tag_Name_web*"
  become: true
  vars_files:
    - /etc/ansible/roles/example.com-web/vars/main.yml
    - /etc/ansible/roles/example.com-web/vars/certificates.yml
  roles:
    - { role: example.com-web }
